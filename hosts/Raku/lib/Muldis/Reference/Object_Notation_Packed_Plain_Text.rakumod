###########################################################################
###########################################################################

module Muldis::Reference::Object_Notation_Packed_Plain_Text
{
    sub extract_MUON_from_Text(Str:D $text)
    {
        return Muldis::Reference::Object_Notation_Packed_Plain_Text::Grammar.parse(
            $text,
            :token<MUON>,
            :actions(Muldis::Reference::Object_Notation_Packed_Plain_Text::Actions.new())
        );
    }
}

###########################################################################
###########################################################################

grammar Muldis::Reference::Object_Notation_Packed_Plain_Text::Grammar
{

###########################################################################

    token Muldis_Object_Notation_Packed_Plain_Text
    {
        <sp>? ~ <sp>? <Any>
    }

###########################################################################

    token sp
    {
        '`' ~ '`' <[ \x[0]..\x[FF] ] - [`]>*
    }

###########################################################################

    token Any
    {
        <simple_primary> | <collective_primary>
    }

    token simple_primary
    {
          <Ignorance>
        | <Boolean>
        | <Integer>
        | <Fraction>
        | <Bits>
        | <Blob>
        | <Text>
        | <Nesting>
    }

    token collective_primary
    {
          <Duo>
        | <Lot>
        | <Kit>
        | <Article>
        | <Excuse>
    }

###########################################################################

    token Ignorance
    {
        TODO
    }

###########################################################################

    token Boolean
    {
        TODO
    }

###########################################################################

    token Integer
    {
        TODO
    }

###########################################################################

    token Fraction
    {
        TODO
    }

###########################################################################

    token Bits
    {
        TODO
    }

###########################################################################

    token Blob
    {
        TODO
    }

###########################################################################

    token Text
    {
        TODO
    }

###########################################################################

    token Nesting
    {
        TODO
    }

###########################################################################

    token Duo
    {
        TODO
    }

###########################################################################

    token Lot
    {
        TODO
    }

###########################################################################

    token Kit
    {
        TODO
    }

###########################################################################

    token Article
    {
        TODO
    }

###########################################################################

    token Excuse
    {
        TODO
    }

###########################################################################

}

###########################################################################
###########################################################################

class Muldis::Reference::Object_Notation_Packed_Plain_Text::Actions
{
}

###########################################################################
###########################################################################
